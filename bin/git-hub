#!/bin/bash

BLAME=false
BRANCH=$(git rev-parse --abbrev-ref HEAD)
COMMIT=
FILE=
HASH=
QUERY=
REMOTE_BRANCH=
URL=

usage() {
    echo "GIT-HUB"
    echo
    echo "Usage: $0 [args]"
    echo
    echo "Args:"
    echo "--blame, -blame       : If given will open the branch in the Blame view."
    echo "                        Not applicable if given a topic branch or hash."
    echo
    echo "--branch, -branch, -b : If given, will get the hash of the local topic branch."
    echo "                        Note that this should be thought of as the same as the"
    echo "                        hash option."
    echo
    echo "--file, -file, -f     : The file to lookup on GitHub. Accepts relative paths."
    echo
    echo "--hash, -hash, -h     : The commit hash to lookup on GitHub."
    echo
    echo "-help                 : Help."
    echo
    echo "--remote, -remote, -r : The branch to use as the base lookup branch on GitHub."
    echo
    echo "--tag, -tag, -t       : It given, will get the hash of the tag."
    echo "                        Note that this should be thought of as the same as the"
    echo "                        hash option."
    echo
}

setGitHubUrl() {
    GITHUB_URL=$(git ls-remote --get-url)

    # If $GITHUB_URL begins with "git", i.e., git@github.com:btoll/utley
    if [[ "$GITHUB_URL" == git* ]]; then
        # Replaces first match of ":" with "/".
        URL=${GITHUB_URL/://}

        # Replaces first match of "git@" with "https://".
        URL=${URL/git@/https://}
    fi

    # If $URL ends with ".git", i.e., btoll/stymie.git
    if [[ "$URL" == *.git ]]; then
        # Cut ".git"
        URL=${URL%.git}
    fi
}

if [ "$#" -eq 0 ]; then
    usage
    exit 0
fi

# Swap out for user-provided options if given.
while [ "$#" -gt 0 ]; do
    OPT="$1"
    case $OPT in
        --blame|-blame) BLAME=true ;;
        --branch|-branch|-b) shift; COMMIT=$1 ;;
        --file|-file|-f) shift; FILE=$1 ;;
        --hash|-hash|-h) shift; HASH=$1 ;;
        -help) usage; exit 0 ;;
        --remote|-remote|-r) shift; REMOTE_BRANCH=$1 ;;
        --tag|-tag|-t) shift; COMMIT=$1 ;;
    esac
    shift
done

setGitHubUrl

if [[ ( -n "$HASH" ) || ( -n "$COMMIT" ) ]]; then
    # If given a topic branch or tag, simply get its hash.
    if [[ -n "$COMMIT" ]]; then
        HASH=$(git show "$COMMIT" | grep commit | awk '{print $2}')
    fi

    URL="$URL/commit/$HASH"
else
    # TODO: Is this needed anymore?
    QUERY=$(git rev-parse --show-prefix)

    if [ -n "$FILE" ]; then
        QUERY+="$FILE"
    fi

    if [[ -n "$REMOTE_BRANCH" ]]; then
        BRANCH="$REMOTE_BRANCH"
    fi

    if $BLAME; then
        URL="$URL/blame/$BRANCH/$QUERY"
    else
        URL="$URL/blob/$BRANCH/$QUERY"
    fi
fi

echo "$URL"
open "$URL"

