#!/bin/bash

CMD=
COMMIT="HEAD"
DIRTY=false
GET_COMMITTED_FILES_CMD="git diff-tree --no-commit-id --name-only -r"
PATTERN=
VIM=

check_cwd() {
    # http://stackoverflow.com/a/14127035/125349
    if [ "$PWD" != $(git rev-parse --show-toplevel) ]; then
        echo "$(tput setaf 3)[WARNING]$(tput sgr0) You need to run this command from the toplevel of the working tree."
        exit 1
    fi
}

usage() {
    echo "git-ls"
    echo
    echo "Usage: $0 [args]"
    echo
    echo "Args:"
    echo "--commit, -c    Use this commit to determine which files are shown (defaults to HEAD)."
    echo
    echo "--dirty, -d     List the files that are currently staged and modified in the workspace."
    echo "                If not specified, it will default to list the files that make up the"
    echo "                last commit (determined by \$COMMIT)."
    echo
    echo "--edit, -e      Open all listed files in Vim using:"
    echo "                    b = one window (just buffers)"
    echo "                    h = horizontally-split windows"
    echo "                    t = tabs"
    echo "                    v = vertically-split windows"
    echo "                    Defaults to 'b'."
    echo
    echo "                Note that if a pattern is given that only the files that match this"
    echo "                pattern will be opened in Vim."
    echo
    echo "--pattern, -p   Specify a pattern that will be used to search through all the files"
    echo "                that make up the commit."
    echo
}

# Swap out for user-provided options if given.
while [ "$#" -gt 0 ]; do
    OPT="$1"
    case "$OPT" in
        --commit|-c) shift; COMMIT="$1" ;;
        --dirty|-d) DIRTY=true ;;
        --edit|-e)
            shift
            case "$1" in
                b) VIM=" " ;;
                h) VIM="-o" ;;
                t) VIM="-p" ;;
                v) VIM="-O" ;;
                *) VIM=" " ;;
            esac
            ;;
        -help|-h) usage; exit 0 ;;
        --pattern|-p) shift; PATTERN="$1" ;;
        --recurse|-r) shift; RECURSE="$1" ;;
    esac
    shift
done

if [ -n "$RECURSE" ] && [ "$RECURSE" -gt 0 ]; then
#    Doing `git ls -r 3` will construct the following command behind the scenes:
#
#        (
#         git diff-tree --no-commit-id --name-only -r HEAD ;
#         git diff-tree --no-commit-id --name-only -r HEAD^ ;
#         git diff-tree --no-commit-id --name-only -r HEAD^^ ;
#        ) | sort | uniq
#
    COUNTER=0
    GROUP="("
    LEVEL=""

    while [[ "$COUNTER" -lt "$RECURSE" ]]; do
       GROUP+=" $GET_COMMITTED_FILES_CMD HEAD$LEVEL ;"
       COUNTER=$(( $COUNTER + 1 ))
       LEVEL+="^"
    done

    CMD="$GROUP ) | sort | uniq"
else
    # To get a list of the files that differ from HEAD (both staged and modified).
    if $DIRTY; then
        CMD="git diff-index --name-only $COMMIT"
    else
        CMD="$GET_COMMITTED_FILES_CMD $COMMIT"
    fi
fi

if [ -n "$PATTERN" ]; then
    check_cwd

    # The `-l` switch only displays the file name.
    # The `-w` switch only matches whole words.
    CMD="$CMD | xargs ag -lw $PATTERN"
fi

if [ -n "$VIM" ]; then
    check_cwd
    CMD='vim '"$VIM"' $('"$CMD"')'
fi

eval "$CMD"

