#!/bin/bash # https://stackoverflow.com/questions/424071/list-all-the-files-for-a-commit-in-git
# https://stackoverflow.com/questions/3882838/whats-an-easy-way-to-detect-modified-files-in-a-git-workspace

# TODO:
# 1. Use an environment variable when checking if the cwd matches the top-level directory of the repo.
CMD=
COMMIT="HEAD"
DIRTY=false
MSG=
PATTERN=
VIM=

check_cwd() {
    # http://stackoverflow.com/a/14127035/125349
    if [ "$PWD" != $(git rev-parse --show-toplevel) ]; then
        echo "$(tput setaf 3)[WARNING]$(tput sgr0) You need to run this command from the toplevel of the working tree."
        exit 1
    fi
}

usage() {
    echo "git-ls"
    echo
    echo "Usage: $0 [args]"
    echo
    echo "Args:"
    echo "--commit, -c   : Use this commit to determine which files are shown"
    echo "                 (defaults to HEAD)."
    echo
    echo "--dirty, -d    : List the files that are currently staged and modified"
    echo "                 in the workspace. If not specified, it will default"
    echo "                 to list the files that make up the last commit"
    echo "                 (determined by $COMMIT)."
    echo
    echo "--edit, -e     : Open all listed files in Vim using:"
    echo "                     b = one window (just buffers)"
    echo "                     h = horizontally-split windows"
    echo "                     t = tabs"
    echo "                     v = vertically-split windows"
    echo "                     Defaults to 'b'."
    echo
    echo "                 Note that if a pattern is given that only the files"
    echo "                 that match this pattern will be opened in Vim."
    echo
    echo "--pattern, -p  : Specify a pattern that will be used to search through"
    echo "                 all the files that make up the commit."
    echo
}

# Swap out for user-provided options if given.
while [ "$#" -gt 0 ]; do
    OPT="$1"
    case "$OPT" in
        --commit|-c) shift; COMMIT="$1" ;;
        --dirty|-d) DIRTY=true;;
        --edit|-e)
            shift
            case "$1" in
                b) VIM=" " ;;
                h) VIM="-o" ;;
                t) VIM="-p" ;;
                v) VIM="-O" ;;
                *) VIM=" " ;;
            esac
            ;;
        -help|-h) usage; exit 0 ;;
        --pattern|-p) shift; PATTERN="$1" ;;
    esac
    shift
done

# To get a list of the files that differ from HEAD (both staged and modified).
if $DIRTY; then
    CMD="git diff-index --name-only $COMMIT"
    MSG="Files that are staged or modified in your workspace:"
else
    CMD="git diff-tree --no-commit-id --name-only -r $COMMIT"
    MSG="Files that made up your last commit:"
fi

#if [ "$($CMD | wc -l)" -eq "0" ]; then
#    echo "[git-ls] There is nothing to list."
#    exit 0
#fi

if [ -n "$PATTERN" ]; then
    check_cwd

    # The `-l` switch only displays the file name.
    # The `-w` switch only matches whole words.
    CMD="$CMD | xargs ag -lw $PATTERN"
fi

if [ -n "$VIM" ]; then
    check_cwd

    # http://stackoverflow.com/a/16579925
    CMD='vim '"$VIM"' $('"$CMD"')'
else
    echo "$MSG"
fi

eval "$CMD"

